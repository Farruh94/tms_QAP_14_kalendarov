# Списки:
# 1 Создайте два любых списка и свяжите их с переменными.
# 2 Извлеките из первого списка второй элемент.
def work_on_lists():
    list_1 = [0, 1, 2, 3, 4]
    list_2 = [5, 6, 7, 8, 9]
    return list_1[1]


print(work_on_lists())


# 3 Измените во втором списке последний элемент. Выведите список на экран.


# 4 Соедините оба списка в один, присвоив результат новой переменной. Выведите
# получившийся список на экран.

# 5 "Снимите" срез из соединенного списка так, чтобы туда попали некоторые части
# обоих первых списков. Срез свяжите с очередной новой переменной. Выведите
# значение этой переменной.

# 6 Добавьте в список два новых элемента и снова выведите его.





# 7 Даны списки:
# Нужно вернуть список, который состоит из элементов, общих для этих двух
# списков. -- !не использовать циклы
def merged_list():
    a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
    b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
    c = set(a + b)
    return list(c)


print(merged_list())

# 8 Есть список: [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3] оставить в нем только уникальные
# значения. !не использовать циклы

def unique_list():
    some_list = [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3]
    unique_list = set(some_list)
    return list(unique_list)


print(unique_list())


